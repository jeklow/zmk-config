/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        layer_3 {
            bindings = <&mo 1>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R  &kp T          &kp Y          &kp U  &kp I            &kp O    &kp P      &kp LEFT_BRACKET
&kp TAB    &kp A  &kp S  &kp D         &kp F  &kp G          &kp H          &kp J  &kp K            &kp L    &kp SEMI   &kp SINGLE_QUOTE
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V  &kp B          &kp N          &kp M  &kp COMMA        &kp DOT  &kp SLASH  &kp LEFT_ALT
                         &kp LEFT_WIN  &mo 1  &lt 3 SPACE    &kp BACKSPACE  &mo 2  &mt LCTRL ENTER
            >;
        };

        layer_1 {
            bindings = <
&trans          &kp KP_RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp PIPE2        &kp TILDE2         &trans           &trans          &trans         &trans             &trans            &trans
&kp AT_SIGN     &kp KP_LPAR               &kp LEFT_BRACKET   &kp KP_N3      &kp KP_MINUS     &kp KP_ASTERISK    &kp LEFT_ARROW   &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW    &kp KP_SLASH      &trans
&kp LEFT_SHIFT  &kp GREATER_THAN          &kp EQUAL          &kp KP_PLUS    &kp EXCLAMATION  &kp LEFT_BRACE     &kp RIGHT_BRACE  &kp COLON       &kp SEMICOLON  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp LEFT_ALT
                                                             &kp LEFT_WIN   &trans           &trans             &kp KP_N4        &kp UNDERSCORE  &kp LCTRL
            >;
        };

        layer_2 {
            bindings = <
&trans          &trans        &trans        &trans        &trans        &trans          &trans           &trans         &trans       &trans    &trans   &trans
&kp DELETE      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp PRINTSCREEN  &kp PAGE_DOWN  &kp PAGE_UP  &kp HOME  &kp END  &trans
&kp LEFT_SHIFT  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &trans           &trans         &trans       &trans    &trans   &kp LEFT_ALT
                                            &kp LEFT_WIN  &kp KP_N1     &kp KP_N2       &trans           &trans         &kp LCTRL
            >;
        };

        layer_3 {
            bindings = <
&kp F6          &kp F5          &kp F4        &kp F3        &kp F2        &kp F1        &trans                 &trans                 &trans             &trans      &trans  &trans
&kp F7          &kp F8          &kp F9        &kp F10       &kp F11       &kp F12       &trans                 &kp C_VOLUME_UP        &kp C_VOLUME_DOWN  &kp K_MUTE  &trans  &trans
&kp LEFT_SHIFT  &bt BT_CLR_ALL  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR    &trans                 &trans                 &trans             &trans      &trans  &kp LEFT_ALT
                                              &kp LEFT_WIN  &trans        &trans        &kp LS(LC(LG(KP_N5)))  &kp LS(LC(LG(KP_N6)))  &kp LCTRL
            >;
        };
    };
};
